name: CI

on:
  push:
    branches:
    - main
  pull_request:

permissions:
  contents: read

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install required packages
        run: python -m pip install --upgrade tox

      - name: Run linters
        run: tox -e lint


  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: requirements/*.txt

    - name: Upgrade packaging tools
      run: python -m pip install --upgrade pip setuptools virtualenv wheel

    - name: Install dependencies
      run: python -m pip install --upgrade codecov tox

    - name: Run tox targets for Python ${{ matrix.python-version }}
      run: |
        ENV_PREFIX=$(tr -C -d "0-9" <<< "${{ matrix.python-version }}")
        TOXENV=$(tox --listenvs | grep "^py$ENV_PREFIX" | tr '\n' ',') tox

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false


  deploy:
    name: Deploy
    needs:
      - linting
      - tests
    runs-on: ubuntu-latest
    if: github.ref=='refs/heads/main' && github.event_name!='pull_request'

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Check release
        id: check_release
        run: |
          python -m pip install autopub httpx==0.18.2
          python -m pip install https://github.com/scikit-build/github-release/archive/master.zip
          autopub check

      - name: Publish
        if: ${{ steps.check_release.outputs.autopub_release=='true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          autopub prepare
          autopub commit
          autopub build
          autopub githubrelease

      - name: Upload package to PyPI
        if: ${{ steps.check_release.outputs.autopub_release=='true' }}
        uses: pypa/gh-action-pypi-publish@release/v1
